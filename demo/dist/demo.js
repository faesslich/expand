(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("Expand", [], factory);
	else if(typeof exports === 'object')
		exports["Expand"] = factory();
	else
		root["Expand"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../src/expand.js":
/*!************************!*\
  !*** ../src/expand.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Expand; });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Expand = /*#__PURE__*/function () {\n  /**\r\n   * Constructor\r\n   * @param options\r\n   * @param dataOptions\r\n   */\n  function Expand(options, dataOptions) {\n    var _this = this;\n\n    _classCallCheck(this, Expand);\n\n    var eventHandlers = ['resizeHandler', 'clickHandler', 'touchstartHandler', 'touchendHandler', 'touchmoveHandler', 'mousedownHandler', 'mouseupHandler', 'mouseleaveHandler', 'mousemoveHandler'];\n    this.config = Expand.settingsOverride(options, dataOptions);\n    this.selector = typeof this.config.selector === 'string' ? document.querySelector(this.config.selector) : this.config.selector; // Create global references\n\n    this.selectorWidth = this.selector.offsetWidth;\n    this.innerItems = [].slice.call(this.selector.children);\n    this.curSlide = this.config.loop ? this.config.startIndex % this.innerItems.length : Math.max(0, Math.min(this.config.startIndex, this.innerItems.length - this.visibleSlides)); // Event handler binding\n\n    eventHandlers.forEach(function (method) {\n      _this[method] = _this[method].bind(_this);\n    });\n    this.slidesAmount();\n    this.init();\n  }\n  /**\r\n   * Overrides default settings with custom ones.\r\n   * @param options\r\n   * @param dataOptions\r\n   * @returns {\r\n     * {\r\n       * useCssFile: number, centerModeRange: boolean, prevArrowInner: string, nextArrowInner: string, arrows: boolean,\r\n       * autoplayDuration: number, prevArrowClass: string, duration: number, startIndex: number, nextArrowClass: string,\r\n       * multipleDrag: boolean, draggable: boolean, activeClass: boolean, onInit: function(), loop: boolean,\r\n       * gap: number, selector: string, visibleSlides: number, slidesToSlide: number, keyboard: boolean,\r\n       * onChange: function(), cssCustomPath: string, triggerDistance: number, centerMode: boolean,\r\n       * itemSelector: string, rtl: boolean, autoplay: number, easeMode: string, arrowsVisible: boolean,\r\n       * pagination: boolean, paginationVisible: boolean\r\n     * }\r\n   * }\r\n   */\n\n\n  _createClass(Expand, [{\n    key: \"attachEvents\",\n\n    /**\r\n     * Attaches listeners to required events.\r\n     */\n    value: function attachEvents() {\n      // If element is draggable / swipable\n      if (this.config.draggable) {\n        this.pointerDown = false;\n        this.drag = {\n          startXAxis: 0,\n          endXAxis: 0,\n          startYAxis: 0,\n          endYAxis: 0,\n          dragOff: null,\n          preventClick: false\n        }; // add event handlers\n\n        window.addEventListener('resize', this.resizeHandler);\n        this.selector.addEventListener('click', this.clickHandler, {\n          passive: false\n        });\n        this.selector.addEventListener('touchstart', this.touchstartHandler, {\n          passive: false\n        });\n        this.selector.addEventListener('touchend', this.touchendHandler, {\n          passive: false\n        });\n        this.selector.addEventListener('touchmove', this.touchmoveHandler, {\n          passive: false\n        });\n        this.selector.addEventListener('mousedown', this.mousedownHandler, {\n          passive: false\n        });\n        this.selector.addEventListener('mouseup', this.mouseupHandler, {\n          passive: false\n        });\n        this.selector.addEventListener('mouseleave', this.mouseleaveHandler, {\n          passive: false\n        });\n        this.selector.addEventListener('mousemove', this.mousemoveHandler, {\n          passive: false\n        });\n      }\n    }\n    /**\r\n     * Builds the markup and attaches listeners to required events.\r\n     */\n\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.attachEvents();\n      this.selector.classList.add('expand-outer'); // Build container and slide to current item\n\n      this.sliderContainerCreate(); // trigger autoplay if enabled\n\n      if (this.config.autoplay) {\n        this.autoPlay();\n      } // add arrows to slider\n\n\n      if (this.config.arrows) {\n        this.arrowsVisibility();\n        this.arrowsInit();\n      } // add keyboard navigation to slider\n\n\n      if (this.config.keyboard) {\n        this.keyboardNavigation();\n      }\n\n      if (this.config.useCssFile && this.config.activeClass) {\n        this.activeClass();\n      }\n\n      if (this.config.pagination) {\n        this.paginationVisibility();\n        this.paginationInit();\n        this.paginationUpdate();\n      }\n\n      this.config.onInit.call(this);\n    }\n    /**\r\n     * Build container and slide to current item\r\n     */\n\n  }, {\n    key: \"sliderContainerCreate\",\n    value: function sliderContainerCreate() {\n      var widthItem = this.selectorWidth / this.visibleSlides;\n      var itemWidthCalc = this.config.loop ? 2 * this.visibleSlides + this.innerItems.length : this.innerItems.length;\n      this.slideItemWrapper = document.createElement('div');\n      this.slideItemWrapper.classList.add('expand-js'); // inline css or with classes for more customizability\n\n      if (this.config.useCssFile) {\n        this.slideItemWrapper.classList.add('-hidden');\n\n        if (this.config.rtl) {\n          this.slideItemWrapper.classList.add('-rtl');\n        }\n      } else {\n        this.slideItemWrapper.style.overflow = 'hidden';\n        this.slideItemWrapper.style.direction = this.config.rtl ? 'rtl' : 'ltr'; // rtl or ltr\n      }\n\n      if (this.config.pagination) {\n        this.slideItemWrapper.classList.add('-is-pagination');\n      } // Create frame and apply styling\n\n\n      this.slideItem = document.createElement('div');\n      this.slideItem.classList.add('expand-js--container');\n      this.slideItem.style.width = \"\".concat(widthItem * itemWidthCalc, \"px\");\n      this.isTransition();\n\n      if (this.config.centerMode) {\n        this.slideItem.classList.add('-is-center-mode');\n\n        if (this.config.centerModeRange) {\n          this.slideItem.classList.add('-is-center-range');\n        }\n      } // Create a document fragment to put slides into it\n\n\n      var slides = document.createDocumentFragment(); // Loop through the slides, add styling and add them to document fragment\n\n      if (this.config.loop) {\n        for (var i = this.innerItems.length - this.visibleSlides; i < this.innerItems.length; i += 1) {\n          var element = this.createSliderItem(this.innerItems[i].cloneNode(true));\n          slides.appendChild(element);\n        }\n      }\n\n      for (var _i = 0; _i < this.innerItems.length; _i += 1) {\n        var _element = this.createSliderItem(this.innerItems[_i]);\n\n        slides.appendChild(_element);\n      }\n\n      if (this.config.loop) {\n        for (var _i2 = 0; _i2 < this.visibleSlides; _i2 += 1) {\n          var _element2 = this.createSliderItem(this.innerItems[_i2].cloneNode(true));\n\n          slides.appendChild(_element2);\n        }\n      } // Add fragment to the frame\n\n\n      this.selector.innerHTML = '';\n      this.slideItemWrapper.appendChild(this.slideItem);\n      this.slideItem.appendChild(slides);\n      this.selector.appendChild(this.slideItemWrapper); // Go to currently active slide after initial build\n\n      this.slideToCurrent();\n\n      if (this.config.useCssFile && this.config.activeClass) {\n        this.activeClass();\n      }\n    }\n    /**\r\n     * Slider item creation\r\n     * @param item\r\n     * @returns {*}\r\n     */\n\n  }, {\n    key: \"createSliderItem\",\n    value: function createSliderItem(item) {\n      var itemContainer = document.createElement('div');\n\n      if (this.config.useCssFile) {\n        itemContainer.classList.add(this.config.itemSelector.replace('.', ''));\n\n        if (this.config.rtl) {\n          itemContainer.classList.add('f-right');\n        } else {\n          itemContainer.classList.add('f-left');\n        }\n      } else {\n        itemContainer.style.cssFloat = this.config.rtl ? 'right' : 'left';\n      }\n\n      if (this.config.gap) {\n        itemContainer.style.width = \"calc(\".concat(this.config.loop ? 100 / (this.innerItems.length + this.visibleSlides * 2) : 100 / this.innerItems.length, \"% - \").concat(this.config.gap, \"px)\");\n      } else {\n        itemContainer.style.width = \"\".concat(this.config.loop ? 100 / (this.innerItems.length + this.visibleSlides * 2) : 100 / this.innerItems.length, \"%\");\n      }\n\n      itemContainer.appendChild(item);\n      return itemContainer;\n    }\n    /**\r\n     * sets amount of visible slides based on viewport (fixed number or object value for responsive changes)\r\n     */\n\n  }, {\n    key: \"slidesAmount\",\n    value: function slidesAmount() {\n      var _this2 = this;\n\n      if (typeof this.config.visibleSlides === 'number') {\n        this.visibleSlides = this.config.visibleSlides;\n      } else if (_typeof(this.config.visibleSlides) === 'object') {\n        this.visibleSlides = 1;\n        Object.keys(this.config.visibleSlides).forEach(function (key) {\n          if (window.innerWidth >= Number(key)) {\n            _this2.visibleSlides = _this2.config.visibleSlides[Number(key)];\n          }\n        });\n      }\n    }\n    /**\r\n     * Previous slide\r\n     * @param countSlides\r\n     * @param cb\r\n     * @param delay\r\n     */\n\n  }, {\n    key: \"prevSlide\",\n    value: function prevSlide() {\n      var _this3 = this;\n\n      var countSlides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var cb = arguments.length > 1 ? arguments[1] : undefined;\n      var delay = arguments.length > 2 ? arguments[2] : undefined;\n\n      // early return if no slides\n      if (this.innerItems.length <= this.visibleSlides) {\n        return;\n      }\n\n      if (this.config.slidesToSlide > 1) {\n        countSlides = this.config.slidesToSlide;\n      }\n\n      var curSlideCheck = this.curSlide;\n\n      if (this.config.loop) {\n        var isCloneSlide = this.curSlide - countSlides < 0;\n\n        if (isCloneSlide) {\n          var cloneIndex = this.curSlide + this.innerItems.length;\n          var cloneIndexOffset = this.visibleSlides;\n          var newPos = cloneIndex + cloneIndexOffset;\n          var offset = (this.config.rtl ? 1 : -1) * newPos * (this.selectorWidth / this.visibleSlides) + (this.config.gap ? this.config.gap : 0);\n          var dragDistance = this.config.draggable ? this.drag.endXAxis - this.drag.startXAxis : 0;\n          this.isNotTransition();\n          this.slideItem.style.transform = \"translate3d(\".concat(offset + dragDistance, \"px, 0, 0)\");\n          this.curSlide = cloneIndex - countSlides;\n        } else {\n          this.curSlide -= countSlides;\n        }\n      } else {\n        this.curSlide = Math.max(this.curSlide - countSlides, 0);\n      }\n\n      if (curSlideCheck !== this.curSlide) {\n        this.slideToCurrent(this.config.loop);\n        this.config.onChange.call(this);\n\n        if (delay && cb) {\n          setTimeout(function () {\n            cb.call(_this3);\n          }, delay);\n        } else if (!delay && cb) {\n          cb.call(this);\n        }\n      }\n    }\n    /**\r\n     * Next slide\r\n     * @param countSlides\r\n     * @param cb\r\n     * @param delay\r\n     */\n\n  }, {\n    key: \"nextSlide\",\n    value: function nextSlide() {\n      var _this4 = this;\n\n      var countSlides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var cb = arguments.length > 1 ? arguments[1] : undefined;\n      var delay = arguments.length > 2 ? arguments[2] : undefined;\n\n      // early return when there is nothing to slide\n      if (this.innerItems.length <= this.visibleSlides) {\n        return;\n      }\n\n      if (this.config.slidesToSlide > 1) {\n        countSlides = this.config.slidesToSlide;\n      }\n\n      var curSlideCheck = this.curSlide;\n\n      if (this.config.loop) {\n        var isCloneSlide = this.curSlide + countSlides > this.innerItems.length - this.visibleSlides;\n\n        if (isCloneSlide) {\n          this.isNotTransition();\n          var cloneIndex = this.curSlide - this.innerItems.length;\n          var cloneIndexOffset = this.visibleSlides;\n          var newPos = cloneIndex + cloneIndexOffset;\n          var offset = (this.config.rtl ? 1 : -1) * newPos * (this.selectorWidth / this.visibleSlides) + (this.config.gap ? this.config.gap : 0);\n          var dragDistance = this.config.draggable ? this.drag.endXAxis - this.drag.startXAxis : 0;\n          this.slideItem.style.transform = \"translate3d(\".concat(offset + dragDistance, \"px, 0, 0)\");\n          this.curSlide = cloneIndex + countSlides;\n        } else {\n          this.curSlide += countSlides;\n        }\n      } else {\n        this.curSlide = Math.min(this.curSlide + countSlides, this.innerItems.length - this.visibleSlides);\n      }\n\n      if (curSlideCheck !== this.curSlide) {\n        this.slideToCurrent(this.config.loop);\n        this.config.onChange.call(this);\n\n        if (delay && cb) {\n          setTimeout(function () {\n            cb.call(_this4);\n          }, delay);\n        } else if (!delay && cb) {\n          cb.call(this);\n        }\n      }\n    }\n    /**\r\n     * Disable transition on slideItem.\r\n     */\n\n  }, {\n    key: \"isNotTransition\",\n    value: function isNotTransition() {\n      this.slideItem.style.transition = \"all 0ms \".concat(this.config.easeMode);\n    }\n    /**\r\n     * Enable transition on slideItem.\r\n     */\n\n  }, {\n    key: \"isTransition\",\n    value: function isTransition() {\n      this.slideItem.style.transition = \"all \".concat(this.config.duration, \"ms \").concat(this.config.easeMode);\n    }\n    /**\r\n     * Go to specific slide method\r\n     * @param index\r\n     * @param cb\r\n     * @param delay\r\n     */\n\n  }, {\n    key: \"goToSlide\",\n    value: function goToSlide(index, cb, delay) {\n      var _this5 = this;\n\n      if (this.innerItems.length <= this.visibleSlides) {\n        return;\n      }\n\n      var curSlideCheck = this.curSlide;\n      this.curSlide = this.config.loop ? index % this.innerItems.length : Math.min(Math.max(index, 0), this.innerItems.length - this.visibleSlides);\n\n      if (curSlideCheck !== this.curSlide) {\n        this.slideToCurrent();\n        this.config.onChange.call(this);\n\n        if (delay && cb) {\n          setTimeout(function () {\n            cb.call(_this5);\n          }, delay);\n        } else if (!delay && cb) {\n          cb.call(this);\n        }\n      }\n    }\n    /**\r\n     * Jump to active slide\r\n     * @param isTransition\r\n     */\n\n  }, {\n    key: \"slideToCurrent\",\n    value: function slideToCurrent(isTransition) {\n      var _this6 = this;\n\n      var curSlide = this.config.loop ? this.curSlide + this.visibleSlides : this.curSlide;\n      var offset = (this.config.rtl ? 1 : -1) * curSlide * (this.selectorWidth / this.visibleSlides) + (this.config.gap ? this.config.gap : 0);\n\n      if (isTransition) {\n        requestAnimationFrame(function () {\n          requestAnimationFrame(function () {\n            _this6.isTransition();\n\n            _this6.slideItem.style.transform = \"translate3d(\".concat(offset + _this6.config.gap, \"px, 0, 0)\");\n          });\n        });\n      } else {\n        this.slideItem.style.transform = \"translate3d(\".concat(offset, \"px, 0, 0)\");\n      }\n\n      if (this.config.useCssFile && this.config.activeClass) {\n        this.activeClass();\n      }\n\n      if (this.config.pagination) {\n        this.paginationUpdate();\n      }\n    }\n    /**\r\n     * Get new position after dragging\r\n     */\n\n  }, {\n    key: \"updateAfterDrag\",\n    value: function updateAfterDrag() {\n      var movement = (this.config.rtl ? -1 : 1) * (this.drag.endXAxis - this.drag.startXAxis);\n      var moveDistance = Math.abs(movement);\n      var slideableSlides = this.config.multipleDrag ? Math.ceil(moveDistance / (this.selectorWidth / this.visibleSlides)) : this.config.slidesToSlide;\n      var slideToNegativeClone = movement > 0 && this.curSlide - slideableSlides < 0;\n      var slideToPositiveClone = movement < 0 && this.curSlide + slideableSlides > this.innerItems.length - this.visibleSlides;\n\n      if (movement > 0 && moveDistance > this.config.triggerDistance && this.innerItems.length > this.visibleSlides) {\n        this.prevSlide(slideableSlides);\n      } else if (movement < 0 && moveDistance > this.config.triggerDistance && this.innerItems.length > this.visibleSlides) {\n        this.nextSlide(slideableSlides);\n      }\n\n      this.slideToCurrent(slideToNegativeClone || slideToPositiveClone);\n    }\n    /**\r\n     * dynamic item sizes for browser scaling\r\n     */\n\n  }, {\n    key: \"resizeHandler\",\n    value: function resizeHandler() {\n      this.slidesAmount();\n\n      if (this.curSlide + this.visibleSlides > this.innerItems.length) {\n        this.curSlide = this.innerItems.length <= this.visibleSlides ? 0 : this.innerItems.length - this.visibleSlides;\n      }\n\n      this.selectorWidth = this.selector.offsetWidth;\n\n      if (this.config.arrows) {\n        this.sliderContainerCreate();\n        this.arrowsVisibility();\n        this.arrowsInit();\n      }\n\n      if (this.config.useCssFile && this.config.activeClass) {\n        this.activeClass();\n      }\n\n      if (this.config.pagination) {\n        this.paginationVisibility();\n        this.paginationInit();\n        this.paginationUpdate();\n      }\n    }\n  }, {\n    key: \"stopDragging\",\n    value: function stopDragging() {\n      this.drag = {\n        startXAxis: 0,\n        endXAxis: 0,\n        startYAxis: 0,\n        dragOff: null,\n        preventClick: this.drag.preventClick\n      };\n    }\n    /**\r\n     * Remove item method\r\n     * @param index\r\n     * @param cb\r\n     * @param delay\r\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(index, cb, delay) {\n      var _this7 = this;\n\n      var lowerIndex = index < this.curSlide;\n      var lastItem = this.curSlide + this.visibleSlides - 1 === index;\n\n      if (lowerIndex || lastItem) {\n        this.curSlide -= 1;\n      }\n\n      this.innerItems.splice(index, 1); // build a frame and slide to a curSlide\n\n      this.sliderContainerCreate();\n\n      if (delay && cb) {\n        setTimeout(function () {\n          cb.call(_this7);\n        }, delay);\n      } else if (!delay && cb) {\n        cb.call(this);\n      }\n    }\n    /**\r\n     * Insert item method\r\n     * @param item\r\n     * @param index\r\n     * @param cb\r\n     * @param delay\r\n     */\n\n  }, {\n    key: \"insertElem\",\n    value: function insertElem(item, index, cb, delay) {\n      var _this8 = this;\n\n      this.innerItems.splice(index, 0, item);\n      this.sliderContainerCreate();\n\n      if (delay && cb) {\n        setTimeout(function () {\n          cb.call(_this8);\n        }, delay);\n      } else if (!delay && cb) {\n        cb.call(this);\n      }\n    }\n    /**\r\n     * Prepend item method\r\n     * @param item\r\n     * @param cb\r\n     * @param delay\r\n     */\n\n  }, {\n    key: \"prependElem\",\n    value: function prependElem(item, cb, delay) {\n      var _this9 = this;\n\n      this.insertElem(item, 0);\n\n      if (delay && cb) {\n        setTimeout(function () {\n          cb.call(_this9);\n        }, delay);\n      } else if (!delay && cb) {\n        cb.call(this);\n      }\n    }\n    /**\r\n     * Append item method\r\n     * @param item\r\n     * @param cb\r\n     * @param delay\r\n     */\n\n  }, {\n    key: \"appendElem\",\n    value: function appendElem(item, cb, delay) {\n      var _this10 = this;\n\n      this.insertElem(item, this.innerItems.length + 1);\n\n      if (delay && cb) {\n        setTimeout(function () {\n          cb.call(_this10);\n        }, delay);\n      } else if (!delay && cb) {\n        cb.call(this);\n      }\n    }\n    /**\r\n     * Autoplay method\r\n     */\n\n  }, {\n    key: \"autoPlay\",\n    value: function autoPlay() {\n      var _this11 = this;\n\n      setInterval(function () {\n        return _this11.nextSlide();\n      }, this.config.autoplayDuration);\n    }\n    /**\r\n     * init pagination\r\n     */\n\n  }, {\n    key: \"paginationInit\",\n    value: function paginationInit() {\n      var _this12 = this;\n\n      if (this.paginationVisible === true && this.config.pagination) {\n        var availableItems = this.innerItems.length;\n        var visibleSlides = this.visibleSlides;\n        var paginationCount = Math.ceil(availableItems / visibleSlides);\n        this.paginationContainer = document.createElement('div');\n        this.paginationContainer.classList.add('expand-pagination');\n\n        var _loop = function _loop(i) {\n          var jumpTo = (i + 1) * visibleSlides - visibleSlides > _this12.innerItems.length ? _this12.innerItems.length : (i + 1) * visibleSlides - visibleSlides;\n          _this12.paginationItem = document.createElement('span');\n\n          _this12.paginationItem.classList.add('pagination-item');\n\n          _this12.paginationItem.dataset.pagination = '' + (i + 1);\n          _this12.paginationItem.innerHTML = _this12.paginationItem.dataset.pagination;\n\n          _this12.paginationItem.addEventListener('click', function () {\n            return _this12.goToSlide(jumpTo);\n          });\n\n          _this12.paginationContainer.appendChild(_this12.paginationItem);\n        };\n\n        for (var i = 0; i < paginationCount; i += 1) {\n          _loop(i);\n        }\n\n        this.selector.appendChild(this.paginationContainer);\n      }\n    }\n    /**\r\n     * update pagination based on current slide\r\n     */\n\n  }, {\n    key: \"paginationUpdate\",\n    value: function paginationUpdate() {\n      if (this.paginationVisible === true && this.config.pagination) {\n        var paginationItems = this.selector.querySelectorAll('.pagination-item');\n        var getPaginationItem = Math.ceil(this.curSlide / this.visibleSlides) + 1;\n\n        for (var i = 0; i < paginationItems.length; i += 1) {\n          paginationItems[i].classList.remove('active');\n\n          if (getPaginationItem === Number(paginationItems[i].dataset.pagination)) {\n            paginationItems[i].classList.add('active');\n          }\n        }\n      }\n    }\n    /**\r\n     * sets visibility of pagination based on viewport\r\n     * (boolean or object value for responsive changes)\r\n     */\n\n  }, {\n    key: \"paginationVisibility\",\n    value: function paginationVisibility() {\n      var _this13 = this;\n\n      if (typeof this.config.paginationVisible === 'boolean') {\n        this.paginationVisible = this.config.paginationVisible;\n      } else if (_typeof(this.config.paginationVisible) === 'object') {\n        this.paginationVisible = true;\n        Object.keys(this.config.paginationVisible).forEach(function (key) {\n          if (window.innerWidth >= Number(key)) {\n            _this13.paginationVisible = _this13.config.paginationVisible[Number(key)];\n          }\n        });\n      }\n    }\n    /**\r\n     * add arrows\r\n     */\n\n  }, {\n    key: \"arrowsInit\",\n    value: function arrowsInit() {\n      var _this14 = this;\n\n      if (this.arrowsVisible === true && this.config.arrows) {\n        this.prevSelector = document.createElement('button');\n        this.prevSelector.setAttribute('class', this.config.prevArrowClass);\n        this.prevSelector.innerHTML = this.config.prevArrowInner;\n        this.selector.appendChild(this.prevSelector);\n        this.nextSelector = document.createElement('button');\n        this.nextSelector.setAttribute('class', this.config.nextArrowClass);\n        this.nextSelector.innerHTML = this.config.nextArrowInner;\n        this.selector.appendChild(this.nextSelector);\n        this.prevSelector.addEventListener('click', function () {\n          return _this14.prevSlide();\n        });\n        this.nextSelector.addEventListener('click', function () {\n          return _this14.nextSlide();\n        });\n      }\n    }\n    /**\r\n     * sets visibility of arrows based on viewport\r\n     * (boolean or object value for responsive changes)\r\n     */\n\n  }, {\n    key: \"arrowsVisibility\",\n    value: function arrowsVisibility() {\n      var _this15 = this;\n\n      if (typeof this.config.arrowsVisible === 'boolean') {\n        this.arrowsVisible = this.config.arrowsVisible;\n      } else if (_typeof(this.config.arrowsVisible) === 'object') {\n        this.arrowsVisible = true;\n        Object.keys(this.config.arrowsVisible).forEach(function (key) {\n          if (window.innerWidth >= Number(key)) {\n            _this15.arrowsVisible = _this15.config.arrowsVisible[Number(key)];\n          }\n        });\n      }\n    }\n    /**\r\n     * add keyboard navigation\r\n     */\n\n  }, {\n    key: \"keyboardNavigation\",\n    value: function keyboardNavigation() {\n      var _this16 = this;\n\n      document.addEventListener('keydown', function (e) {\n        if (e.key === 'ArrowLeft') {\n          _this16.prevSlide();\n        }\n\n        if (e.key === 'ArrowRight') {\n          _this16.nextSlide();\n        }\n      });\n    }\n    /**\r\n     * add active class to visible slides\r\n     */\n\n  }, {\n    key: \"activeClass\",\n    value: function activeClass() {\n      var curSlide = this.config.loop ? this.curSlide + this.visibleSlides : this.curSlide;\n      var classCount = this.visibleSlides;\n      var availableItems = this.selector.querySelectorAll(this.config.itemSelector);\n      var itemSelector = this.config.itemSelector.replace('.', '');\n      var activeClass = itemSelector + '-active';\n\n      if (availableItems) {\n        for (var i = 0; i < availableItems.length; i += 1) {\n          availableItems[i].classList.remove(activeClass);\n        }\n\n        for (var j = 0; j < classCount; j += 1) {\n          availableItems[curSlide + j].classList.add(activeClass);\n        } // centered mode\n\n\n        if (this.config.centerMode) {\n          this.centerMode(itemSelector);\n        }\n      }\n    }\n    /**\r\n     * add center classes to items in the middle of visible slides\r\n     * @param itemSelector\r\n     */\n\n  }, {\n    key: \"centerMode\",\n    value: function centerMode(itemSelector) {\n      var curSlide = this.config.loop ? this.curSlide + this.visibleSlides : this.curSlide;\n      var classCount = this.visibleSlides;\n      var availableItems = this.selector.querySelectorAll('.' + itemSelector);\n      var centeredItem = Math.ceil(classCount / 2);\n      var centerClass = itemSelector + '-center';\n      var halfCenterClass = itemSelector + '-half-center';\n      var quarterCenterClass = itemSelector + '-quarter-center';\n\n      if (availableItems) {\n        for (var i = 0; i < availableItems.length; i += 1) {\n          availableItems[i].classList.remove(centerClass);\n          availableItems[i].classList.remove(halfCenterClass);\n          availableItems[i].classList.remove(quarterCenterClass);\n        }\n      }\n\n      for (var j = 0; j < classCount; j += 1) {\n        if (availableItems[curSlide + j]) {\n          availableItems[curSlide + centeredItem - 1].classList.add(centerClass);\n\n          if (classCount % 2 === 0) {\n            availableItems[curSlide + centeredItem].classList.add(centerClass);\n\n            if (classCount >= 6 && this.config.centerModeRange) {\n              availableItems[curSlide + centeredItem - 2].classList.add(halfCenterClass);\n              availableItems[curSlide + centeredItem + 1].classList.add(halfCenterClass);\n            }\n          } else if (classCount >= 5 && classCount % 2 !== 0 && this.config.centerModeRange) {\n            availableItems[curSlide + centeredItem - 2].classList.add(halfCenterClass);\n            availableItems[curSlide + centeredItem].classList.add(halfCenterClass);\n\n            if (classCount >= 7) {\n              availableItems[curSlide + centeredItem - 3].classList.add(quarterCenterClass);\n              availableItems[curSlide + centeredItem + 1].classList.add(quarterCenterClass);\n            }\n          }\n        }\n      }\n    }\n    /**\r\n     * click event handler\r\n     */\n\n  }, {\n    key: \"clickHandler\",\n    value: function clickHandler(e) {\n      // prevent clicking link on dragging\n      // (note: if subitems inside slide, you need to set `pointer-events: none` via css.)\n      if (this.drag.preventClick) {\n        e.preventDefault();\n      }\n\n      this.drag.preventClick = false;\n    }\n    /**\r\n     * mousedown event handler\r\n     */\n\n  }, {\n    key: \"mousedownHandler\",\n    value: function mousedownHandler(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.pointerDown = true;\n      this.drag.startXAxis = e.pageX;\n    }\n    /**\r\n     * mouseup event handler\r\n     */\n\n  }, {\n    key: \"mouseupHandler\",\n    value: function mouseupHandler(e) {\n      e.stopPropagation();\n      this.pointerDown = false;\n      this.selector.style.cursor = '-webkit-grab';\n      this.isTransition();\n\n      if (this.drag.endXAxis) {\n        this.updateAfterDrag();\n      }\n\n      this.stopDragging();\n    }\n    /**\r\n     * mousemove event handler\r\n     */\n\n  }, {\n    key: \"mousemoveHandler\",\n    value: function mousemoveHandler(e) {\n      e.preventDefault();\n\n      if (this.pointerDown) {\n        if (e.target.nodeName === 'A') {\n          this.drag.preventClick = true;\n        }\n\n        this.drag.endXAxis = e.pageX;\n        this.selector.style.cursor = '-webkit-grabbing';\n        this.slideItem.style.transition = \"all 0ms \".concat(this.config.easeMode);\n        var curSlide = this.config.loop ? this.curSlide + this.visibleSlides : this.curSlide;\n        var currentOffset = curSlide * (this.selectorWidth / this.visibleSlides);\n        var dragOffset = this.drag.endXAxis - this.drag.startXAxis;\n        var offset = this.config.rtl ? currentOffset + dragOffset + (this.config.gap ? this.config.gap : 0) : currentOffset - dragOffset - (this.config.gap ? this.config.gap : 0);\n        this.slideItem.style.transform = \"translate3d(\".concat((this.config.rtl ? 1 : -1) * offset, \"px, 0, 0)\");\n      }\n    }\n    /**\r\n     * mouseleave event handler\r\n     */\n\n  }, {\n    key: \"mouseleaveHandler\",\n    value: function mouseleaveHandler(e) {\n      if (this.pointerDown) {\n        this.pointerDown = false;\n        this.selector.style.cursor = '-webkit-grab';\n        this.drag.endXAxis = e.pageX;\n        this.drag.preventClick = false;\n        this.isTransition();\n        this.updateAfterDrag();\n        this.stopDragging();\n      }\n    }\n    /**\r\n     * touchstart event handler\r\n     */\n\n  }, {\n    key: \"touchstartHandler\",\n    value: function touchstartHandler(e) {\n      e.stopPropagation();\n      this.drag.startXAxis = e.touches[0].pageX;\n      this.drag.startYAxis = e.touches[0].pageY;\n      this.pointerDown = true;\n    }\n    /**\r\n     * touchend event handler\r\n     */\n\n  }, {\n    key: \"touchendHandler\",\n    value: function touchendHandler(e) {\n      e.stopPropagation();\n      this.pointerDown = false;\n      this.isTransition();\n\n      if (this.drag.endXAxis) {\n        this.updateAfterDrag();\n      }\n\n      this.stopDragging();\n    }\n    /**\r\n     * touchmove event handler\r\n     */\n\n  }, {\n    key: \"touchmoveHandler\",\n    value: function touchmoveHandler(e) {\n      e.stopPropagation();\n\n      if (this.drag.dragOff === null) {\n        this.drag.dragOff = Math.abs(this.drag.startYAxis - e.touches[0].pageY) < Math.abs(this.drag.startXAxis - e.touches[0].pageX);\n      }\n\n      if (this.pointerDown && this.drag.dragOff) {\n        var curSlide = this.config.loop ? this.curSlide + this.visibleSlides : this.curSlide;\n        var currentOffset = curSlide * (this.selectorWidth / this.visibleSlides);\n        var dragOffset = this.drag.endXAxis - this.drag.startXAxis;\n        var offset = this.config.rtl ? currentOffset + dragOffset + (this.config.gap ? this.config.gap : 0) : currentOffset - dragOffset - (this.config.gap ? this.config.gap : 0);\n        e.preventDefault();\n        this.drag.endXAxis = e.touches[0].pageX;\n        this.slideItem.style.transition = \"0 all \".concat(this.config.easeMode, \" \");\n        this.slideItem.style.transform = \"translate3d(\".concat((this.config.rtl ? 1 : -1) * offset, \"px, 0, 0)\");\n      }\n    }\n    /**\r\n     * destroy method\r\n     * @param restore\r\n     * @param cb\r\n     * @param delay\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this17 = this;\n\n      var restore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var cb = arguments.length > 1 ? arguments[1] : undefined;\n      var delay = arguments.length > 2 ? arguments[2] : undefined;\n      // remove listeners\n      window.removeEventListener('resize', this.resizeHandler);\n      this.selector.removeEventListener('click', this.clickHandler);\n      this.selector.removeEventListener('mouseup', this.mouseupHandler);\n      this.selector.removeEventListener('mousedown', this.mousedownHandler);\n      this.selector.removeEventListener('mouseleave', this.mouseleaveHandler);\n      this.selector.removeEventListener('mousemove', this.mousemoveHandler);\n      this.selector.removeEventListener('touchstart', this.touchstartHandler);\n      this.selector.removeEventListener('touchend', this.touchendHandler);\n      this.selector.removeEventListener('touchmove', this.touchmoveHandler); // restore to initial markup\n\n      if (restore) {\n        var slides = document.createDocumentFragment();\n\n        for (var i = 0; i < this.innerItems.length; i += 1) {\n          slides.appendChild(this.innerItems[i]);\n        }\n\n        this.selector.innerHTML = '';\n        this.selector.appendChild(slides).removeAttribute('style');\n      }\n\n      if (delay && cb) {\n        setTimeout(function () {\n          cb.call(_this17);\n        }, delay);\n      } else if (!delay && cb) {\n        cb.call(this);\n      }\n    }\n  }], [{\n    key: \"settingsOverride\",\n    value: function settingsOverride(options, dataOptions) {\n      var defaults = {\n        selector: '.expand-js-outer',\n        itemSelector: '.expand-js--item',\n        visibleSlides: 1,\n        useCssFile: 1,\n        cssCustomPath: '',\n        startIndex: 0,\n        draggable: true,\n        multipleDrag: true,\n        triggerDistance: 20,\n        loop: true,\n        rtl: false,\n        duration: 500,\n        easeMode: 'ease-out',\n        slidesToSlide: 1,\n        activeClass: true,\n        centerMode: false,\n        centerModeRange: false,\n        pagination: false,\n        paginationVisible: true,\n        autoplay: 0,\n        autoplayDuration: 3000,\n        arrows: false,\n        arrowsVisible: true,\n        prevArrowClass: 'expand-js--prev',\n        nextArrowClass: 'expand-js--next',\n        prevArrowInner: '‹',\n        nextArrowInner: '›',\n        gap: 0,\n        keyboard: false,\n        onInit: function onInit() {},\n        onChange: function onChange() {}\n      };\n      return _objectSpread(_objectSpread(_objectSpread({}, defaults), options), dataOptions);\n    }\n  }]);\n\n  return Expand;\n}();\n\n\n\n//# sourceURL=webpack://Expand/../src/expand.js?");

/***/ }),

/***/ "./assets/demo.js":
/*!************************!*\
  !*** ./assets/demo.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_expand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/expand */ \"../src/expand.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* eslint-disable */\n\n/**\r\n * default usage\r\n * @type {Expand}\r\n */\n\nvar defaultDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n/**\r\n * responsive example with custom selector\r\n * @type {Element}\r\n */\n\nvar responsiveSelector = document.querySelector('.expand-responsive-wrapper');\nvar responsiveDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: responsiveSelector,\n  visibleSlides: {\n    768: 2,\n    1024: 3\n  }\n});\n/**\r\n * arrow navigation example with custom selector\r\n * @type {Element}\r\n */\n\nvar arrowNavSelector = document.querySelector('.expand-arrow-navigation-wrapper');\nvar arrowNavDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: arrowNavSelector,\n  arrows: true\n});\n/**\r\n * responsive expand with a responsive arrow navigation example with custom selector\r\n * @type {Element}\r\n */\n\nvar responsiveArrowNavSelector = document.querySelector('.expand-responsive-and-arrow-navigation-wrapper');\nvar responsiveArrowNavDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: responsiveArrowNavSelector,\n  visibleSlides: {\n    768: 2,\n    1024: 3\n  },\n  arrows: true,\n  arrowsVisible: {\n    100: false,\n    1024: true\n  }\n});\n/**\r\n * responsive expand with a responsive arrow navigation example with custom selector\r\n * @type {Element}\r\n */\n\nvar customArrowNavSelector = document.querySelector('.expand-custom-arrow-navigation-wrapper');\nvar customArrowNavDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: customArrowNavSelector,\n  visibleSlides: {\n    768: 2,\n    1024: 5\n  },\n  arrows: true,\n  arrowsVisible: {\n    100: false,\n    1024: true\n  },\n  prevArrowClass: 'expand-js--prev expand-custom-arrows',\n  nextArrowClass: 'expand-js--next expand-custom-arrows',\n  prevArrowInner: '<span>«</span>',\n  nextArrowInner: '<span>»</span>'\n});\n/**\r\n * responsive expand with a responsive pagination example\r\n * @type {Element}\r\n */\n\nvar paginationSelector = document.querySelector('.expand-pagination-wrapper');\nvar paginationDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: paginationSelector,\n  visibleSlides: {\n    768: 2,\n    1024: 3\n  },\n  arrows: true,\n  arrowsVisible: {\n    100: false,\n    1024: true\n  },\n  pagination: true,\n  // paginationVisible: true,\n  paginationVisible: {\n    0: false,\n    320: true\n  }\n});\n/**\r\n * responsive expand with a responsive arrow navigation example with custom selector\r\n * @type {Element}\r\n */\n\nvar centerModeSelector = document.querySelector('.expand-center-mode-wrapper');\nvar centerModeDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: centerModeSelector,\n  visibleSlides: {\n    768: 2,\n    1024: 5\n  },\n  arrows: true,\n  centerMode: true\n});\n/**\r\n * responsive expand with a responsive arrow navigation example with custom selector\r\n * @type {Element}\r\n */\n\nvar centerModeRangeSelector = document.querySelector('.expand-center-mode-range-wrapper');\nvar centerModeRangeDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: centerModeRangeSelector,\n  visibleSlides: {\n    768: 2,\n    1024: 5\n  },\n  arrows: true,\n  centerMode: true,\n  centerModeRange: true\n});\nvar centerModeRangeSelector2 = document.querySelector('.expand-center-mode-range-wrapper2');\nvar centerModeRangeDemo2 = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: centerModeRangeSelector2,\n  visibleSlides: {\n    768: 2,\n    1024: 7\n  },\n  arrows: true,\n  centerMode: true,\n  centerModeRange: true\n});\n/**\r\n * expand with autoplay enabled and with custom selector\r\n * @type {Element}\r\n */\n\nvar autoplaySelector = document.querySelector('.expand-autoplay-wrapper');\nvar autoplayDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: autoplaySelector,\n  autoplay: true,\n  autoplayDuration: 4000\n});\n/**\r\n * expand with multiple slides to slide on trigger\r\n * @type {Element}\r\n */\n\nvar multiSlideSelector = document.querySelector('.expand-multislide-wrapper');\nvar multiSlideDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: multiSlideSelector,\n  slidesToSlide: 2\n});\n/**\r\n * expand with rtl enabled\r\n * @type {Element}\r\n */\n\nvar rtlSelector = document.querySelector('.expand-rtl-wrapper');\nvar rtlDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: rtlSelector,\n  rtl: true\n});\n/**\r\n * expand with keyboard usage enabled\r\n * @type {Element}\r\n */\n\nvar keyboardSelector = document.querySelector('.expand-keyboard-wrapper');\nvar keyboardDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: keyboardSelector,\n  keyboard: true\n});\n/**\r\n * expand with more or less all features enabled at once\r\n * @type {Element}\r\n */\n\nvar featureSeptionSelector = document.querySelector('.expand-featureseption-wrapper');\nvar featureSeptionDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: featureSeptionSelector,\n  duration: 300,\n  easeMode: 'ease-out',\n  visibleSlides: {\n    100: 1,\n    768: 2,\n    1024: 3\n  },\n  startIndex: 0,\n  draggable: true,\n  multipleDrag: true,\n  triggerDistance: 30,\n  slidesToSlide: 2,\n  autoplay: 1,\n  autoplayDuration: 5000,\n  arrows: true,\n  arrowsVisible: {\n    100: false,\n    1024: true,\n    1920: false\n  },\n  prevArrowClass: 'expand-js--prev expand-custom-arrows',\n  nextArrowClass: 'expand-js--next expand-custom-arrows',\n  prevArrowInner: '<span>«</span>',\n  nextArrowInner: '<span>»</span>',\n  rtl: true,\n  keyboard: true,\n  loop: true\n});\n/**\r\n * multiple expand instances fired by one selector node list\r\n * @type {NodeListOf<Element>}\r\n */\n\nvar multiInstancesSelectors = document.querySelectorAll('.expand-multi-instances-wrapper');\n\nvar _iterator = _createForOfIteratorHelper(multiInstancesSelectors),\n    _step;\n\ntry {\n  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n    var multiInstancesSelector = _step.value;\n    var multiInstancesDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      selector: multiInstancesSelector,\n      duration: 300,\n      easeMode: 'ease-out',\n      useCssFile: 1,\n      visibleSlides: {\n        100: 1,\n        768: 2\n      },\n      startIndex: 0,\n      draggable: true,\n      multipleDrag: true,\n      arrows: true,\n      triggerDistance: 30,\n      rtl: false,\n      loop: true\n    });\n  }\n  /**\r\n   * expand with ootb events\r\n   * @type {Element}\r\n   */\n\n} catch (err) {\n  _iterator.e(err);\n} finally {\n  _iterator.f();\n}\n\nvar eventBindingSelector = document.querySelector('.expand-event-binding-wrapper');\nvar eventBindingDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: eventBindingSelector,\n  onInit: function onInit() {\n    return console.log('I got initialised');\n  },\n  onChange: function onChange() {\n    console.log('I got changed'), eventBindingSelector.style.backgroundColor = \"blue\", eventBindingSelector.style.padding = \"2rem\";\n  }\n});\n/**\r\n * expand with callback\r\n * @type {Element}\r\n */\n\nvar prevBtnCallback = document.querySelector('#goToPrevCallback');\nvar nextBtnCallback = document.querySelector('#goToNextCallback');\nvar callbackSelector = document.querySelector('.expand-callback-usage-wrapper');\nvar callbackDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: callbackSelector,\n  arrows: true,\n  visibleSlides: {\n    768: 2,\n    1024: 3\n  }\n}); // the number inside of the used methods tell the slider how many slides to change\n\nprevBtnCallback.addEventListener('click', function () {\n  return callbackDemo.prevSlide(3, function () {\n    document.querySelector('.callback-text-output').innerHTML = 'Callback for <b>prevSlide</b> after one second';\n    console.log('Callback for prevSlide after one second');\n  }, 1000);\n});\nnextBtnCallback.addEventListener('click', function () {\n  return callbackDemo.nextSlide(3, function () {\n    document.querySelector('.callback-text-output').innerHTML = 'Callback for <b>nextSlide</b> after one second';\n    console.log('Callback for nextSlide after one second');\n  }, 1000);\n});\n/**\r\n * bind instance to elements which are not part of the slider itself\r\n * @type {Element}\r\n */\n\nvar prevBtn = document.querySelector('#goToPrev');\nvar nextBtn = document.querySelector('#goToNext');\nvar externalNavSelector = document.querySelector('.expand-api-navigate-binding-wrapper');\nvar externalNavDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: externalNavSelector,\n  visibleSlides: {\n    768: 2,\n    1024: 3\n  },\n  arrows: true,\n  arrowsVisible: {\n    100: false,\n    1024: true\n  }\n}); // the number inside of the used methods tell the slider how many slides to change\n\nprevBtn.addEventListener('click', function () {\n  return externalNavDemo.prevSlide(3);\n});\nnextBtn.addEventListener('click', function () {\n  return externalNavDemo.nextSlide(3);\n});\n/**\r\n * easy manipulate expand and append or prepend new items\r\n * @type {Element}\r\n */\n\nvar prependBtn = document.querySelector('#prependButton');\nvar appendBtn = document.querySelector('#appendButton');\nvar manipulateItemsSelector = document.querySelector('.expand-api-manipulate-items-wrapper');\nvar manipulateItemsDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: manipulateItemsSelector,\n  visibleSlides: 2,\n  arrows: true\n});\nprependBtn.addEventListener('click', function () {\n  var prependItem = document.createElement('div');\n  prependItem.innerHTML = 'I am prepended!';\n  manipulateItemsDemo.prependElem(prependItem);\n});\nappendBtn.addEventListener('click', function () {\n  var appendItem = document.createElement('div');\n  appendItem.innerHTML = 'I am appended!';\n  manipulateItemsDemo.appendElem(appendItem);\n});\n/**\r\n * add settings to expand via data attribute or any JSON string.\r\n * JSON String needs to get parsed as in this example!\r\n * @type {Element}\r\n */\n\nvar dataOptionsSelector = document.querySelector('.expand-api-data-options-wrapper');\nvar dataOptionsDemo = new _src_expand__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  selector: dataOptionsSelector,\n  visibleSlides: 2,\n  arrows: true\n}, // dataOptions\nJSON.parse(dataOptionsSelector.dataset.options));\n\n//# sourceURL=webpack://Expand/./assets/demo.js?");

/***/ }),

/***/ "./assets/demo.scss":
/*!**************************!*\
  !*** ./assets/demo.scss ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"demo.min.css\");\n\n//# sourceURL=webpack://Expand/./assets/demo.scss?");

/***/ }),

/***/ 0:
/*!*************************************************!*\
  !*** multi ./assets/demo.js ./assets/demo.scss ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./assets/demo.js */\"./assets/demo.js\");\nmodule.exports = __webpack_require__(/*! ./assets/demo.scss */\"./assets/demo.scss\");\n\n\n//# sourceURL=webpack://Expand/multi_./assets/demo.js_./assets/demo.scss?");

/***/ })

/******/ });
});